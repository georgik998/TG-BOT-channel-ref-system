from aiogram import Bot, Router, F
from aiogram.filters import StateFilter
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import default_state
from aiogram.types import Message, CallbackQuery

import project.src.bot.keyboards as kb
from project.src.bot.db.database import DB_ROOT, DataBase, create_connection, close_connection
from project.src.bot.fsm import ReferalState

from datetime import datetime
from math import ceil

referal_router = Router()
database = DataBase()


@referal_router.message(F.text == 'üë®‚Äçüëß‚Äçüë¶ –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞', StateFilter(default_state))
async def referal(message: Message, bot: Bot):
    await bot.delete_message(chat_id=message.from_user.id, message_id=message.message_id)

    create_connection(DB_ROOT, database)
    user_info = database.get_user_info(user_id=message.from_user.id, type='referal')
    bank = database.get_bank_balance()[0]
    channels = database.get_channels()
    close_connection(database)

    channel_text = ''
    for i in range(len(channels)):
        channel_text += f"{i + 1}. {channels[i][1]}\n"

    text = f"""
<b>üë®‚Äçüíª –õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç</b>

üíµ –û–±—â–∞—è —Å—É–º–º–∞ : balance ‚ÇΩ
üí∏ –°—Ç–æ–∏—Ç –Ω–∞ –≤—ã–ø–ª–∞—Ç–µ: balance_output ‚ÇΩ
üí∞ –í—Å–µ–≥–æ –≤—ã–ø–ª–∞—á–µ–Ω–æ: all_time_balance ‚ÇΩ
üè¶ –û–±—â–∏–π –±–∞–Ω–∫ –Ω–∞ –≤—ã–ø–ª–∞—Ç—ã: bank ‚ÇΩ

<b>–ö–∞–Ω–∞–ª—ã:</b> <a href="https://telegra.ph/Kanaly-07-29-2">üëÄ –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å üëÄ</a>

–ó–∞ –∫–∞–∂–¥–æ–≥–æ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–Ω–æ–≥–æ üßë —á–µ–ª–æ–≤–µ–∫–∞ –≤ –æ–¥–∏–Ω –∏–∑ –∫–∞–Ω–∞–ª–æ–≤ –≤—ã –ø–æ–ª—É—á–∞–µ—Ç–µ <b>10</b> —Ä—É–±–ª–µ–π.

<b>üì§ –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞ –¥–ª—è –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è –≤ —ç—Ç–æ—Ç –±–æ—Ç:</b> 
{user_info[5]}

–ó–∞ –∫–∞–∂–¥–æ–≥–æ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–Ω–æ–≥–æ üë± —á–µ–ª–æ–≤–µ–∫–∞ –≤ –±–æ—Ç –≤—ã –ø–æ–ª—É—á–∏—Ç–µ <b>15</b> —Ä—É–±–ª–µ–π.

<b>–í–∞–∂–Ω–æ ‚ùå : –ó–∞ –Ω–∞–∫—Ä—É—Ç–∫—É —á–µ—Ä–µ–∑ —Å–µ—Ä–≤–∏—Å—ã –Ω–∞–∫—Ä—É—Ç–∫–∏ –∏–ª–∏ –ø–æ–¥–æ–±–Ω—ã–µ, –≤–∞—à –∞–∫–∫–∞—É–Ω—Ç –±—É–¥–µ—Ç –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω –Ω–∞–≤—Å–µ–≥–¥–∞.</b>
"""
    text = text.replace('balance', str(user_info[1]), 1).replace('balance_output', str(user_info[2])).replace(
        'all_time_balance', str(user_info[3])).replace('bank', str(bank))

    sms = await message.answer_sticker(
        sticker='CAACAgEAAxkBAAEMBu5mMPayC3c0VPhEsHI0nhTXaq7pyQACDAMAAjXQ4EQn8zNZl8R3bjQE')

    keyboard = kb.create_keyboard_inline([
        [['üë®‚Äçüëß‚Äçüë¶ –†–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–µ —Å—Å—ã–ª–∫–∏', f'referal_channels:{sms.message_id}']],
        [['üíµ –ü–æ—Å—Ç–∞–≤–∏—Ç—å –Ω–∞ –≤—ã–ø–ª–∞—Ç—É', f'referal_withdrawal:{sms.message_id}']],
        [['üóÇÔ∏è –ò—Å—Ç–æ—Ä–∏–∏ –≤—ã–ø–ª–∞—Ç', f'referal_history_withdrawal:{sms.message_id}']],
        [['üí¢ –ó–∞–∫—Ä—ã—Ç—å ', f'close:{sms.message_id}']]
    ])
    await message.answer(
        text=text, reply_markup=keyboard, parse_mode='HTML', disable_web_page_preview=True)


# –°–ø–∏—Å–æ–∫ –∫–∞–Ω–∞–ª–æ–≤
@referal_router.callback_query(F.data[:len('referal_channels')] == 'referal_channels', StateFilter(default_state))
async def referal_channels(callback: CallbackQuery):
    sticker_id = callback.data.split(':')[1]

    create_connection(DB_ROOT, database)
    channels = database.get_channels()
    close_connection(database)
    keyboard = []
    pages = ceil(len(channels) / 5)
    if pages == 0: pages = 1

    for channel in channels[:5]:
        keyboard.append(
            [[channel[1], f'channels:{channel[0]}:{sticker_id}']]
        )
    if pages == 1:
        keyboard.extend([
            [[f'1/{pages}', '_']],
            [['‚¨ÖÔ∏è –ù–∞–∑–∞–¥', f'back_channels:{sticker_id}']]

        ])
    else:
        keyboard.extend([
            [[f'1/{pages}', '_'], ['‚û°Ô∏è', f'move_channels:1:1:{sticker_id}']],
            [['‚¨ÖÔ∏è –ù–∞–∑–∞–¥', f'back_channels:{sticker_id}']]

        ])
    keyboard = kb.create_keyboard_inline(keyboard)
    await callback.message.edit_text(
        text='üëá–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞–Ω–∞–ªüëá',
        reply_markup=keyboard)


@referal_router.callback_query(F.data[:len('move_channels')] == 'move_channels', StateFilter(default_state))
async def move_channels(callback: CallbackQuery):
    data = callback.data.split(':')
    sticker_id = data[3]
    page = int(data[1]) + int(data[2])

    if page > 0:

        create_connection(DB_ROOT, database)
        channels = database.get_channels()
        close_connection(database)

        pages = ceil(len(channels) / 5)
        channels = channels[5 * (page - 1):5 * pages]

        if channels:
            keyboard = []
            for channel in channels[:5]:
                keyboard.append(
                    [[channel[1], f'channels:{channel[0]}:{sticker_id}']]
                )
            if page == pages:
                keyboard.extend([
                    [['‚¨ÖÔ∏è', f'move_channels:{page}:-1:{sticker_id}'], [f'{page}/{pages}', '_']],
                    [['‚¨ÖÔ∏è –ù–∞–∑–∞–¥', f'back_channels:{sticker_id}']]

                ])
            elif page == 1 and pages == 1:
                keyboard.extend([
                    [[f'{page}/{pages}', '_']],
                    [['‚¨ÖÔ∏è –ù–∞–∑–∞–¥', f'back_channels:{sticker_id}']]

                ])
            elif page == 1:
                keyboard.extend([
                    [[f'{page}/{pages}', '_'], ['‚û°Ô∏è', f'move_channels:{page}:1:{sticker_id}']],
                    [['‚¨ÖÔ∏è –ù–∞–∑–∞–¥', f'back_channels:{sticker_id}']]

                ])
            else:

                keyboard.extend([
                    [['‚¨ÖÔ∏è', f'move_channels:{page}:-1:{sticker_id}'], [f'{page}/{pages}', '_'],
                     ['‚û°Ô∏è', f'move_channels:{page}:1:{sticker_id}']],
                    [['‚¨ÖÔ∏è –ù–∞–∑–∞–¥', f'back_channels:{sticker_id}']]

                ])
            keyboard = kb.create_keyboard_inline(keyboard)
            await callback.message.edit_text(
                text='üëá–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞–Ω–∞–ªüëá',
                reply_markup=keyboard)


@referal_router.callback_query(F.data[:len('back_channels_info')] == 'back_channels_info', StateFilter(default_state))
async def back_channels_info(callback: CallbackQuery):
    sticker_id = callback.data.split(':')[1]

    create_connection(DB_ROOT, database)
    channels = database.get_channels()
    close_connection(database)
    keyboard = []
    pages = ceil(len(channels) / 5)

    for channel in channels[:5]:
        keyboard.append(
            [[channel[1], f'channels:{channel[0]}:{sticker_id}']]
        )
    if pages == 1:
        keyboard.extend([
            [[f'1/{pages}', '_']],
            [['‚¨ÖÔ∏è –ù–∞–∑–∞–¥', f'back_channels:{sticker_id}']]

        ])
    else:
        keyboard.extend([
            [[f'1/{pages}', '_'], ['‚û°Ô∏è', f'move_channels:1:1:{sticker_id}']],
            [['‚¨ÖÔ∏è –ù–∞–∑–∞–¥', f'back_channels:{sticker_id}']]

        ])
    keyboard = kb.create_keyboard_inline(keyboard)
    await callback.message.edit_text(
        text='üëá–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞–Ω–∞–ªüëá',
        reply_markup=keyboard)


@referal_router.callback_query(F.data[:len('back_channels')] == 'back_channels', StateFilter(default_state))
async def back_channels(callback: CallbackQuery):
    sticker_id = callback.data.split(':')[1]

    create_connection(DB_ROOT, database)
    user_info = database.get_user_info(user_id=callback.from_user.id, type='referal')
    bank = database.get_bank_balance()[0]
    channels = database.get_channels()
    close_connection(database)

    channel_text = ''
    for i in range(len(channels)):
        channel_text += f"{i + 1}. {channels[i][1]}\n"

    text = f"""
<b>üë®‚Äçüíª –õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç</b>

üíµ –û–±—â–∞—è —Å—É–º–º–∞ : {user_info[1]}‚ÇΩ
üí∏ –°—Ç–æ–∏—Ç –Ω–∞ –≤—ã–ø–ª–∞—Ç–µ: {user_info[2]}‚ÇΩ
üí∞ –í—Å–µ–≥–æ –≤—ã–ø–ª–∞—á–µ–Ω–æ: {user_info[3]}‚ÇΩ
üè¶ –û–±—â–∏–π –±–∞–Ω–∫ –Ω–∞ –≤—ã–ø–ª–∞—Ç—ã: {bank}‚ÇΩ

<b>–ö–∞–Ω–∞–ª—ã:</b> <a href="https://telegra.ph/Kanaly-07-29-2">üëÄ –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å üëÄ</a>

–ó–∞ –∫–∞–∂–¥–æ–≥–æ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–Ω–æ–≥–æ üßë —á–µ–ª–æ–≤–µ–∫–∞ –≤ –æ–¥–∏–Ω –∏–∑ –∫–∞–Ω–∞–ª–æ–≤ –≤—ã –ø–æ–ª—É—á–∞–µ—Ç–µ <b>10</b> —Ä—É–±–ª–µ–π.

<b>üì§ –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞ –¥–ª—è –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è –≤ —ç—Ç–æ—Ç –±–æ—Ç:</b> 
{user_info[5]}

–ó–∞ –∫–∞–∂–¥–æ–≥–æ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–Ω–æ–≥–æ üë± —á–µ–ª–æ–≤–µ–∫–∞ –≤ –±–æ—Ç –≤—ã –ø–æ–ª—É—á–∏—Ç–µ <b>15</b> —Ä—É–±–ª–µ–π.

<b>–í–∞–∂–Ω–æ ‚ùå : –ó–∞ –Ω–∞–∫—Ä—É—Ç–∫—É —á–µ—Ä–µ–∑ —Å–µ—Ä–≤–∏—Å—ã –Ω–∞–∫—Ä—É—Ç–∫–∏ –∏–ª–∏ –ø–æ–¥–æ–±–Ω—ã–µ, –≤–∞—à –∞–∫–∫–∞—É–Ω—Ç –±—É–¥–µ—Ç –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω –Ω–∞–≤—Å–µ–≥–¥–∞.</b>
"""

    keyboard = kb.create_keyboard_inline([
        [['üë®‚Äçüëß‚Äçüë¶ –†–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–µ —Å—Å—ã–ª–∫–∏', f'referal_channels:{sticker_id}']],
        [['üíµ –ü–æ—Å—Ç–∞–≤–∏—Ç—å –Ω–∞ –≤—ã–ø–ª–∞—Ç—É', f'referal_withdrawal:{sticker_id}']],
        [['üóÇÔ∏è –ò—Å—Ç–æ—Ä–∏–∏ –≤—ã–ø–ª–∞—Ç', f'referal_history_withdrawal:{sticker_id}']],
        [['üí¢ –ó–∞–∫—Ä—ã—Ç—å ', f'close:{sticker_id}']]
    ])
    await callback.message.edit_text(
        text=text, reply_markup=keyboard, parse_mode='HTML', disable_web_page_preview=True)


# –ö–∞–Ω–∞–ª
@referal_router.callback_query(F.data[:len('channels')] == 'channels', StateFilter(default_state))
async def channel_info(callback: CallbackQuery):

    data = callback.data.split(':')
    channel_id = int(data[1])
    sticker_id = data[2]

    create_connection(DB_ROOT, database)
    channel_info = database.get_channel(channel_id=channel_id)
    channel_user_info = database.get_user_channel_info(user_id=callback.from_user.id, channel=channel_id)
    close_connection(database)

    text = f"""
<b>–ö–∞–Ω–∞–ª</b>    

üñºÔ∏è <a href="{channel_info[3]}">{channel_info[1]}</a>
üìù <b>–¢–µ–º–∞—Ç–∏–∫–∞ –∫–∞–Ω–∞–ª–∞:</b>
{channel_info[2]}
üì§ <b>–†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞:</b>
{channel_user_info[0]}

üë®‚Äçüëß‚Äçüë¶ <b>–ü—Ä–∏–≥–ª–∞—Å–∏–ª–∏ –≤ —ç—Ç–æ—Ç –∫–∞–Ω–∞–ª:</b> {channel_user_info[2]}

<b>–í–∞–∂–Ω–æ ‚ùå : –ó–∞ –Ω–∞–∫—Ä—É—Ç–∫—É —á–µ—Ä–µ–∑ —Å–µ—Ä–≤–∏—Å—ã –Ω–∞–∫—Ä—É—Ç–∫–∏ –∏–ª–∏ –ø–æ–¥–æ–±–Ω—ã–µ, –≤–∞—à –∞–∫–∫–∞—É–Ω—Ç –±—É–¥–µ—Ç –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω –Ω–∞–≤—Å–µ–≥–¥–∞.</b>  
"""

    keyboard = kb.create_keyboard_inline([
        [['üè† –ù–∞ –≥–ª–∞–≤–Ω—É—é', f'referal_main:{sticker_id}']],
        [['‚¨ÖÔ∏è –ù–∞–∑–∞–¥ ', f'back_channels_info:{sticker_id}']],
        [['üí¢ –ó–∞–∫—Ä—ã—Ç—å ', f'close:{sticker_id}']]
    ])
    await callback.message.edit_text(text=text,
                                     reply_markup=keyboard, parse_mode='HTML', disable_web_page_preview=True)


# –ö–∞–Ω–∞–ª –Ω–∞–∑–∞–¥


@referal_router.callback_query(F.data[:len('referal_main_withdrawal')] == 'referal_main_withdrawal',
                               StateFilter(default_state))
async def referal_home(callback: CallbackQuery, bot: Bot):
    create_connection(DB_ROOT, database)
    user_info = database.get_user_info(user_id=callback.from_user.id, type='referal')
    bank = database.get_bank_balance()[0]
    channels = database.get_channels()
    close_connection(database)

    channel_text = ''
    for i in range(len(channels)):
        channel_text += f"{i + 1}. {channels[i][1]}\n"
    text = f"""
<b>üë®‚Äçüíª –õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç</b>

üíµ –û–±—â–∞—è —Å—É–º–º–∞ : {user_info[1]}‚ÇΩ
üí∏ –°—Ç–æ–∏—Ç –Ω–∞ –≤—ã–ø–ª–∞—Ç–µ: {user_info[2]}‚ÇΩ
üí∞ –í—Å–µ–≥–æ –≤—ã–ø–ª–∞—á–µ–Ω–æ: {user_info[3]}‚ÇΩ
üè¶ –û–±—â–∏–π –±–∞–Ω–∫ –Ω–∞ –≤—ã–ø–ª–∞—Ç—ã: {bank}‚ÇΩ

<b>–ö–∞–Ω–∞–ª—ã:</b> <a href="https://telegra.ph/Kanaly-07-29-2">üëÄ –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å üëÄ</a>

–ó–∞ –∫–∞–∂–¥–æ–≥–æ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–Ω–æ–≥–æ üßë —á–µ–ª–æ–≤–µ–∫–∞ –≤ –æ–¥–∏–Ω –∏–∑ –∫–∞–Ω–∞–ª–æ–≤ –≤—ã –ø–æ–ª—É—á–∞–µ—Ç–µ <b>10</b> —Ä—É–±–ª–µ–π.

<b>üì§ –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞ –¥–ª—è –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è –≤ —ç—Ç–æ—Ç –±–æ—Ç:</b> 
{user_info[5]}

–ó–∞ –∫–∞–∂–¥–æ–≥–æ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–Ω–æ–≥–æ üë± —á–µ–ª–æ–≤–µ–∫–∞ –≤ –±–æ—Ç –≤—ã –ø–æ–ª—É—á–∏—Ç–µ <b>15</b> —Ä—É–±–ª–µ–π.

<b>–í–∞–∂–Ω–æ ‚ùå : –ó–∞ –Ω–∞–∫—Ä—É—Ç–∫—É —á–µ—Ä–µ–∑ —Å–µ—Ä–≤–∏—Å—ã –Ω–∞–∫—Ä—É—Ç–∫–∏ –∏–ª–∏ –ø–æ–¥–æ–±–Ω—ã–µ, –≤–∞—à –∞–∫–∫–∞—É–Ω—Ç –±—É–¥–µ—Ç –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω –Ω–∞–≤—Å–µ–≥–¥–∞.</b> 
"""

    sticker_id = callback.data.split(':')[1]
    await bot.delete_message(chat_id=callback.from_user.id, message_id=int(sticker_id))

    keyboard = kb.create_keyboard_inline([
        [['üë®‚Äçüëß‚Äçüë¶ –†–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–µ —Å—Å—ã–ª–∫–∏', f'referal_channels:0']],
        [['üíµ –ü–æ—Å—Ç–∞–≤–∏—Ç—å –Ω–∞ –≤—ã–ø–ª–∞—Ç—É', f'referal_withdrawal:0']],
        [['üóÇÔ∏è –ò—Å—Ç–æ—Ä–∏–∏ –≤—ã–ø–ª–∞—Ç', f'referal_history_withdrawal:0']],
        [['üí¢ –ó–∞–∫—Ä—ã—Ç—å ', f'close:0']]
    ])
    await callback.message.edit_text(
        text=text, reply_markup=keyboard, parse_mode='HTML', disable_web_page_preview=True)


# –ò—Å—Ç–æ—Ä–∏—è –≤—ã–ø–ª–∞—Ç
def create_history_text(orders, page) -> str:
    TEXT = ''
    number = (page - 1) * 10 + 1
    for item in orders:
        TEXT += f"""
<b>{number}.</b>\t{item[3]} - {item[4]}‚ÇΩ\t{item[2]}
"""
        number += 1
    return TEXT


@referal_router.callback_query(F.data[:len('referal_history_withdrawal')] == 'referal_history_withdrawal',
                               StateFilter(default_state))
async def referal_history_withdrawal(callback: CallbackQuery):
    sticker_id = callback.data.split(':')[1]

    create_connection(DB_ROOT, database)
    orders = database.get_user_orders(user_id=callback.from_user.id, type='referal')
    user_info = database.get_user_info(user_id=callback.from_user.id, type='referal')
    close_connection(database)
    orders = orders[::-1]
    text = create_history_text(orders[:10], page=1)
    text = ('üóì <b>–í–∞—à–∞ –∏—Å—Ç–æ—Ä–∏—è –ø–æ –≤—ã–ø–ª–∞—Ç–∞–º:</b>\n\n'
            f'<b>–û–±—â–∞—è —Å—É–º–º–∞ –≤—ã–ø–ª–∞—á–µ–Ω–∞: {user_info[3]}‚ÇΩ</b>\n'
            '') + text
    pages = ceil(len(orders) / 10)
    if pages == 0 or pages == 1:
        keyboard = kb.create_keyboard_inline([
            [[f'1/1', '-']],
            [['üí¢ –ó–∞–∫—Ä—ã—Ç—å ', f'close:{sticker_id}']],
            [[' ‚¨ÖÔ∏è –ù–∞–∑–∞–¥', f'referal_main:{sticker_id}']]
        ])
    else:
        keyboard = kb.create_keyboard_inline([
            [[f'1/{ceil(len(orders) / 10)}', '-'], ['‚û°Ô∏è ', f'referal_pagination:1:1:{sticker_id}']],
            [['üí¢ –ó–∞–∫—Ä—ã—Ç—å ', f'close:{sticker_id}']],
            [[' ‚¨ÖÔ∏è –ù–∞–∑–∞–¥', f'referal_main:{sticker_id}']]
        ])
    await callback.message.edit_text(
        text=text,
        reply_markup=keyboard, parse_mode='HTML')


@referal_router.callback_query(F.data[:len('referal_pagination')] == 'referal_pagination', StateFilter(default_state))
async def referal_pagination(callback: CallbackQuery, state: FSMContext):
    data = callback.data.split(':')
    page = int(data[2]) + int(data[1])
    sticker_id = data[3]

    create_connection(DB_ROOT, database)
    orders = database.get_user_orders(user_id=callback.from_user.id, type='referal')
    user_info = database.get_user_info(user_id=callback.from_user.id, type='referal')
    close_connection(database)
    orders = orders[::-1]
    text = create_history_text(orders[(page - 1) * 10:page * 10], page=page)

    if text:
        text = ('üóì <b>–í–∞—à–∞ –∏—Å—Ç–æ—Ä–∏—è –ø–æ –≤—ã–ø–ª–∞—Ç–∞–º:</b>\n\n'
                f'<b>–û–±—â–∞—è —Å—É–º–º–∞ –≤—ã–ø–ª–∞—á–µ–Ω–∞: {user_info[3]}‚ÇΩ</b>\n'
                '') + text

        if page == ceil(len(orders) / 10):
            keyboard = kb.create_keyboard_inline([
                [[' ‚¨ÖÔ∏è', f'referal_pagination:-1:{page}:{sticker_id}'], [f'{page}/{ceil(len(orders) / 10)}', '-']],
                [['üí¢ –ó–∞–∫—Ä—ã—Ç—å ', f'close:{sticker_id}']],
                [[' ‚¨ÖÔ∏è –ù–∞–∑–∞–¥', f'referal_main:{sticker_id}']]
            ])
        elif page == 1:
            keyboard = kb.create_keyboard_inline([
                [[f'{page}/{ceil(len(orders) / 10)}', '-'], ['‚û°Ô∏è ', f'referal_pagination:1:{page}:{sticker_id}']],
                [['üí¢ –ó–∞–∫—Ä—ã—Ç—å ', f'close:{sticker_id}']],
                [[' ‚¨ÖÔ∏è –ù–∞–∑–∞–¥', f'referal_main:{sticker_id}']]
            ])
        else:
            keyboard = kb.create_keyboard_inline([
                [[' ‚¨ÖÔ∏è', f'referal_pagination:-1:{page}:{sticker_id}'], [f'{page}/{ceil(len(orders) / 10)}', '-'],
                 ['‚û°Ô∏è ', f'referal_pagination:1:{page}:{sticker_id}']],
                [['üí¢ –ó–∞–∫—Ä—ã—Ç—å ', f'close:{sticker_id}']],
                [[' ‚¨ÖÔ∏è –ù–∞–∑–∞–¥', f'referal_main:{sticker_id}']]
            ])
        await callback.message.edit_text(
            text=text,
            reply_markup=keyboard, parse_mode='HTML')


# –ü–æ—Å—Ç–∞–≤–∏—Ç—å –Ω–∞ –≤—ã–ø–ª–∞—Ç—É
@referal_router.callback_query(F.data[:len('referal_withdrawal')] == 'referal_withdrawal', StateFilter(default_state))
async def referal_withdrawal(callback: CallbackQuery, state: FSMContext):
    sticker_id = callback.data.split(':')[1]

    create_connection(DB_ROOT, database)
    user_info = database.get_user_info(user_id=callback.from_user.id, type='referal')
    close_connection(database)

    text = f"""
<b>üì§ –í—ã–≤–æ–¥</b>

–î–æ—Å—Ç—É–ø–Ω–æ –¥–ª—è –≤—ã–≤–æ–¥–∞: {user_info[1]}‚ÇΩ

<b>–ù–∞–ø–∏—à–∏—Ç–µ —Å—É–º–º—É –∫–æ—Ç–æ—Ä—É—é —Ö–æ—Ç–∏—Ç–µ, –ø–æ—Å—Ç–∞–≤–∏—Ç—å –Ω–∞ –≤—ã–ø–ª–∞—Ç—É:</b>
"""

    keyboard = kb.create_keyboard_inline([
        [[' ‚¨ÖÔ∏è –ù–∞–∑–∞–¥', f'referal_main:{sticker_id}']],
        [['üí¢ –ó–∞–∫—Ä—ã—Ç—å ', f'close:{sticker_id}']]
    ])

    await state.set_state(ReferalState.sum_to_output)
    await callback.message.edit_text(text=text,
                                     reply_markup=keyboard, parse_mode='HTML')


@referal_router.message(StateFilter(ReferalState.sum_to_output))
async def sum_to_output(message: Message, state: FSMContext):
    sum = message.text
    try:
        sum = int(sum)

        create_connection(DB_ROOT, database)
        user_info = database.get_user_info(user_id=message.from_user.id, type='referal')
        close_connection(database)
        if sum < 500:
            await message.answer('‚ùå –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞ - 500‚ÇΩ',
                                 reply_markup=kb.close)
        elif sum <= user_info[1]:
            text = f"""
<b>üéâ –í—Å–µ –ø—Ä–æ—à–ª–æ —É–¥–∞—á–Ω–æ!</b>

<b>–í—ã –ø–æ—Å—Ç–∞–≤–∏–ª–∏ –Ω–∞ –≤—ã–≤–æ–¥:</b> {sum}‚ÇΩ 

–°—É–º–º–∞, –∫–æ—Ç–æ—Ä—É—é –≤—ã –ø–æ—Å—Ç–∞–≤–∏–ª–∏ –Ω–∞ –≤—ã–≤–æ–¥, –∏–∑–º–µ–Ω—è–µ—Ç—Å—è –≤ –ª–∏—á–Ω–æ–º –∫–∞–±–∏–Ω–µ—Ç–µ –≤ —Ä–∞–∑–¥–µ–ª–µ '–°—Ç–æ–∏—Ç –Ω–∞ –≤—ã–ø–ª–∞—Ç–µ'. 
–°—á–µ—Ç—á–∏–∫ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–π –æ–±–Ω–æ–≤–ª—è–µ—Ç—Å—è, –∏ —Å—É–º–º–∞, –∑–∞—Ä–∞–±–æ—Ç–∞–Ω–Ω–∞—è –∏–∑ –æ–±—â–µ–π —Å—É–º–º—ã –∏ –∫–∞–Ω–∞–ª–æ–≤, –ø–µ—Ä–µ—Å—á–∏—Ç—ã–≤–∞–µ—Ç—Å—è –∏ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –∫–∞–∫ '–°—Ç–æ–∏—Ç –Ω–∞ –≤—ã–ø–ª–∞—Ç–µ'.
"""
            create_connection(DB_ROOT, database)
            database.add_order_referal(user_id=message.from_user.id, sum=sum,
                                       date=datetime.now().strftime('%d.%m.%y').rstrip('0'),
                                       user_name=message.from_user.username)
            database.change_profile_balance_referal(user_id=message.from_user.id,
                                                    balance=-sum,
                                                    balance_on_output=sum,
                                                    balance_outputted=0)
            close_connection(database)
            sms = await message.answer_sticker(
                sticker='CAACAgEAAxkBAAEMCZtmMnTLnf5P31aUdWK8tSRWeXisKQAC-gEAAoyxIER4c3iI53gcxDQE')
            keyboard = kb.create_keyboard_inline([
                [[' ‚¨ÖÔ∏è –ù–∞–∑–∞–¥', f'referal_main_withdrawal:{sms.message_id}']]
            ])
            await message.answer(text=text, reply_markup=keyboard, parse_mode='HTML')
            await state.set_state(default_state)
        else:
            await message.answer('‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.',
                                 reply_markup=kb.close)

    except ValueError:
        await message.answer('ü§î–ù–µ–≤–µ—Ä–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.', reply_markup=kb.close)


@referal_router.callback_query(F.data[:len('referal_main')] == 'referal_main', StateFilter(ReferalState.sum_to_output))
async def referal_withdrawal_proccess_back(callback: CallbackQuery, state: FSMContext):
    sticker_id = callback.data.split(':')[1]

    create_connection(DB_ROOT, database)
    user_info = database.get_user_info(user_id=callback.from_user.id, type='referal')
    bank = database.get_bank_balance()[0]
    channels = database.get_channels()
    close_connection(database)

    channel_text = ''
    for i in range(len(channels)):
        channel_text += f"{i + 1}. {channels[i][1]}\n"

    text = f"""
<b>üë®‚Äçüíª –õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç</b>

üíµ –û–±—â–∞—è —Å—É–º–º–∞ : {user_info[1]}‚ÇΩ
üí∏ –°—Ç–æ–∏—Ç –Ω–∞ –≤—ã–ø–ª–∞—Ç–µ: {user_info[2]}‚ÇΩ
üí∞ –í—Å–µ–≥–æ –≤—ã–ø–ª–∞—á–µ–Ω–æ: {user_info[3]}‚ÇΩ
üè¶ –û–±—â–∏–π –±–∞–Ω–∫ –Ω–∞ –≤—ã–ø–ª–∞—Ç—ã: {bank}‚ÇΩ

<b>–ö–∞–Ω–∞–ª—ã:</b> <a href="https://telegra.ph/Kanaly-07-29-2">üëÄ –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å üëÄ</a>

–ó–∞ –∫–∞–∂–¥–æ–≥–æ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–Ω–æ–≥–æ üßë —á–µ–ª–æ–≤–µ–∫–∞ –≤ –æ–¥–∏–Ω –∏–∑ –∫–∞–Ω–∞–ª–æ–≤ –≤—ã –ø–æ–ª—É—á–∞–µ—Ç–µ <b>10</b> —Ä—É–±–ª–µ–π.

<b>üì§ –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞ –¥–ª—è –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è –≤ —ç—Ç–æ—Ç –±–æ—Ç:</b> 
{user_info[5]}

–ó–∞ –∫–∞–∂–¥–æ–≥–æ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–Ω–æ–≥–æ üë± —á–µ–ª–æ–≤–µ–∫–∞ –≤ –±–æ—Ç –≤—ã –ø–æ–ª—É—á–∏—Ç–µ <b>15</b> —Ä—É–±–ª–µ–π.

<b>–í–∞–∂–Ω–æ ‚ùå : –ó–∞ –Ω–∞–∫—Ä—É—Ç–∫—É —á–µ—Ä–µ–∑ —Å–µ—Ä–≤–∏—Å—ã –Ω–∞–∫—Ä—É—Ç–∫–∏ –∏–ª–∏ –ø–æ–¥–æ–±–Ω—ã–µ, –≤–∞—à –∞–∫–∫–∞—É–Ω—Ç –±—É–¥–µ—Ç –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω –Ω–∞–≤—Å–µ–≥–¥–∞.</b>
"""

    keyboard = kb.create_keyboard_inline([
        [['üë®‚Äçüëß‚Äçüë¶ –†–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–µ —Å—Å—ã–ª–∫–∏', f'referal_channels:{sticker_id}']],
        [['üíµ –ü–æ—Å—Ç–∞–≤–∏—Ç—å –Ω–∞ –≤—ã–ø–ª–∞—Ç—É', f'referal_withdrawal:{sticker_id}']],
        [['üóÇÔ∏è –ò—Å—Ç–æ—Ä–∏–∏ –≤—ã–ø–ª–∞—Ç', f'referal_history_withdrawal:{sticker_id}']],
        [['üí¢ –ó–∞–∫—Ä—ã—Ç—å ', f'close:{sticker_id}']]
    ])

    await state.set_state(default_state)
    await callback.message.edit_text(
        text=text, reply_markup=keyboard, parse_mode='HTML', disable_web_page_preview=True)


@referal_router.callback_query(F.data[:len('referal_main')] == 'referal_main', StateFilter(default_state))
async def referal_withdrawal_proccess_back(callback: CallbackQuery, state: FSMContext):
    sticker_id = callback.data.split(':')[1]

    create_connection(DB_ROOT, database)
    user_info = database.get_user_info(user_id=callback.from_user.id, type='referal')
    bank = database.get_bank_balance()[0]
    channels = database.get_channels()
    close_connection(database)

    channel_text = ''
    for i in range(len(channels)):
        channel_text += f"{i + 1}. {channels[i][1]}\n"

    text = f"""
<b>üë®‚Äçüíª –õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç</b>

üíµ –û–±—â–∞—è —Å—É–º–º–∞ : {user_info[1]}‚ÇΩ
üí∏ –°—Ç–æ–∏—Ç –Ω–∞ –≤—ã–ø–ª–∞—Ç–µ: {user_info[2]}‚ÇΩ
üí∞ –í—Å–µ–≥–æ –≤—ã–ø–ª–∞—á–µ–Ω–æ: {user_info[3]}‚ÇΩ
üè¶ –û–±—â–∏–π –±–∞–Ω–∫ –Ω–∞ –≤—ã–ø–ª–∞—Ç—ã: {bank}‚ÇΩ

<b>–ö–∞–Ω–∞–ª—ã:</b> <a href="https://telegra.ph/Kanaly-07-29-2">üëÄ –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å üëÄ</a>

–ó–∞ –∫–∞–∂–¥–æ–≥–æ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–Ω–æ–≥–æ üßë —á–µ–ª–æ–≤–µ–∫–∞ –≤ –æ–¥–∏–Ω –∏–∑ –∫–∞–Ω–∞–ª–æ–≤ –≤—ã –ø–æ–ª—É—á–∞–µ—Ç–µ <b>10</b> —Ä—É–±–ª–µ–π.

<b>üì§ –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞ –¥–ª—è –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è –≤ —ç—Ç–æ—Ç –±–æ—Ç:</b> 
{user_info[5]}

–ó–∞ –∫–∞–∂–¥–æ–≥–æ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–Ω–æ–≥–æ üë± —á–µ–ª–æ–≤–µ–∫–∞ –≤ –±–æ—Ç –≤—ã –ø–æ–ª—É—á–∏—Ç–µ <b>15</b> —Ä—É–±–ª–µ–π.

<b>–í–∞–∂–Ω–æ ‚ùå : –ó–∞ –Ω–∞–∫—Ä—É—Ç–∫—É —á–µ—Ä–µ–∑ —Å–µ—Ä–≤–∏—Å—ã –Ω–∞–∫—Ä—É—Ç–∫–∏ –∏–ª–∏ –ø–æ–¥–æ–±–Ω—ã–µ, –≤–∞—à –∞–∫–∫–∞—É–Ω—Ç –±—É–¥–µ—Ç –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω –Ω–∞–≤—Å–µ–≥–¥–∞.</b> 
"""

    keyboard = kb.create_keyboard_inline([
        [['üë®‚Äçüëß‚Äçüë¶ –†–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–µ —Å—Å—ã–ª–∫–∏', f'referal_channels:{sticker_id}']],
        [['üíµ –ü–æ—Å—Ç–∞–≤–∏—Ç—å –Ω–∞ –≤—ã–ø–ª–∞—Ç—É', f'referal_withdrawal:{sticker_id}']],
        [['üóÇÔ∏è –ò—Å—Ç–æ—Ä–∏–∏ –≤—ã–ø–ª–∞—Ç', f'referal_history_withdrawal:{sticker_id}']],
        [['üí¢ –ó–∞–∫—Ä—ã—Ç—å ', f'close:{sticker_id}']]
    ])

    await state.set_state(default_state)
    await callback.message.edit_text(
        text=text, reply_markup=keyboard, parse_mode='HTML', disable_web_page_preview=True)
